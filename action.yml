name: 'Apply latest configuration profiles via Fleet'
description: 'Applies the latest MDM configuration profiles to a Fleet team'

inputs:
  FLEET_API_TOKEN:
    description: 'Fleet API Token'
    required: true
  FLEET_URL:
    description: 'Fleet URL'
    required: true
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # I think all this will go away:
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # FLEET_TEAM_NAME:
  #   description: 'Fleet team name to apply MDM configuration profiles to'
  #   required: true
  #   default: "Workstations"
  # MDM_CONFIG_REPO: 
  #   description: 'Repository containing MDM configuration profiles'
  #   required: true
  #   default: 'fleetdm/fleet'
  # MDM_CONFIG_DIRECTORY:
  #   description: 'Directory in repo where MDM configuration files are stored'
  #   required: true
  #   default: 'mdm_profiles'
  # MAC_OS_MIN_VERSION:
  #   description: 'Minimum macOS version of hosts'
  #   required: true
  # MAC_OS_VERSION_DEADLINE:
  #   description: 'Deadline for macOS version'
  #   required: true
  # MAC_OS_ENABLE_DISK_ENCRYPTION: 
  #   description: 'Enable disk encryption'
  #   required: true
  #   default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.MDM_CONFIG_REPO }}

    - name: Install fleetctl
      run: npm install -g fleetctl
      shell: bash

    - name: Configure fleetctl
      run: fleetctl config set --address ${{ inputs.FLEET_URL }} --token ${{ inputs.FLEET_API_TOKEN }}
      shell: bash

    - name: Run fleetctl apply
      run: |
        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        # I think all this will go away:
        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        # profiles=""

        # for file in ${{ inputs.MDM_CONFIG_DIRECTORY }}/*.mobileconfig; do
        #   envsubst < "$file" > "${file}.new"
        #   mv "${file}.new" "$file"
        #   profiles+=$'          - '$file$'\n'
        # done

        # echo "apiVersion: v1
        # kind: team
        # spec:
        #   team:
        #     name: ${{ inputs.FLEET_TEAM_NAME }}
        #     mdm:
        #       macos_updates:
        #         minimum_version: \"${{ inputs.MAC_OS_MIN_VERSION }}\"
        #         deadline: ${{ inputs.MAC_OS_VERSION_DEADLINE }}
        #       macos_settings:
        #         enable_disk_encryption: ${{ inputs.MAC_OS_ENABLE_DISK_ENCRYPTION }}
        #         custom_settings:
        # $profiles
        # " > team-workstations-config.yml
        # fleetctl apply -f team-workstations-config.yml

        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        # (If we can add --force to fleetctl apply...)
        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

        # .controls.yml must be applied BEFORE .settings.yml to avoid resetting some config to the defaults
        # TODO: At top-level and in each team folder, apply .controls.yml

      shell: bash
